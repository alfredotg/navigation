components:
  schemas:
    Filters:
      properties:
        ids:
          items:
            type: integer
          title: Ids
          type: array
      title: Filters
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Point:
      properties:
        name:
          title: Name
          type: string
        uid:
          title: Uid
          type: integer
      required:
      - uid
      - name
      title: Point
      type: object
    Points:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Point'
          title: Items
          type: array
      required:
      - items
      title: Points
      type: object
    Route:
      properties:
        distance:
          title: Distance
          type: integer
        name:
          title: Name
          type: string
        steps:
          items:
            $ref: '#/components/schemas/Point'
          title: Steps
          type: array
        uid:
          title: Uid
          type: integer
        user_id:
          title: User Id
          type: integer
      required:
      - name
      - user_id
      - distance
      title: Route
      type: object
    RouteFilters:
      properties:
        ids:
          items:
            type: integer
          title: Ids
          type: array
        join_steps:
          title: Join Steps
          type: boolean
      required:
      - join_steps
      title: RouteFilters
      type: object
    Routes:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Route'
          title: Items
          type: array
      required:
      - items
      title: Routes
      type: object
    RoutesStatsByUser:
      properties:
        count:
          title: Count
          type: integer
        distance:
          title: Distance
          type: integer
        user_id:
          title: User Id
          type: integer
      required:
      - user_id
      - count
      - distance
      title: RoutesStatsByUser
      type: object
    RoutesStatsByUserList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/RoutesStatsByUser'
          title: Items
          type: array
      required:
      - items
      title: RoutesStatsByUserList
      type: object
    SaveRouteRequest:
      properties:
        route:
          $ref: '#/components/schemas/Route'
        steps:
          items:
            type: integer
          title: Steps
          type: array
      required:
      - route
      - steps
      title: SaveRouteRequest
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.0.2
paths:
  /points/find:
    post:
      operationId: findPoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filters'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Points'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Find Points
  /routes/find:
    post:
      description: Finds saved routes
      operationId: findRoutes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteFilters'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routes'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Find Routes
  /routes/save:
    post:
      operationId: saveRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveRouteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Save Route
  /routes/stats_by_users:
    get:
      operationId: getRoutesStatsByUsers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutesStatsByUserList'
          description: Successful Response
      summary: Get Routes Stats By Users
